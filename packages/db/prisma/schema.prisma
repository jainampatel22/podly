generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                      String              @id @default(cuid())
  name                    String?
  email                   String?             @unique
  emailVerified           DateTime?
  image                   String?
  accounts                Account[]
  sessions                Session[]
  subscription            UserSubscription    @default(FREE)
  subscriptionUpdatedAt   DateTime?
  subscriptionLogs        SubscriptionLog[]
  invitations             Invitation[]
  createdAt               DateTime            @default(now())
}

model Account {
  id                 String   @id @default(cuid())
  userId             String
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String?
  access_token       String?
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?
  session_state      String?
  user               User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Invitation {
  id          String   @id @default(uuid())
  senderName  String
  reciverName String
  date        DateTime
  time        String
  subject     String
  email       String
  status      String   @default("pending")
  createdAt   DateTime @default(now())
  user        User?    @relation(fields: [email], references: [email])
}

model SubscriptionLog {
  id         String           @id @default(cuid())
  user       User             @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId     String
  type       UserSubscription
  razorpayId String
  amount     Int
  createdAt  DateTime         @default(now())
}

enum UserSubscription {
  FREE
  PRO
  PROPlus
}
